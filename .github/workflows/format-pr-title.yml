name: Format PR Title

on:
    pull_request:
        types: [opened, edited, synchronize]
    workflow_call: {}

jobs:
    format_pr_title:
        runs-on: ubuntu-latest
        permissions:
            pull-requests: write
        steps:
            - name: Format PR Title
              run: |
                  # Get current PR title and branch name
                  PR_TITLE="${{ github.event.pull_request.title }}"
                  BRANCH_NAME="${{ github.head_ref }}"

                  # Extract issue number from branch name using regex
                  if [[ "$BRANCH_NAME" =~ ^(feature|bugfix|hotfix|release|support)/#([0-9]+)-.*$ ]]; then
                    ISSUE_NUMBER="${BASH_REMATCH[2]}"
                    PREFIX="${BASH_REMATCH[1]}"
                    
                    # Convert prefix to feat/fix format
                    case "$PREFIX" in
                      "feature")
                        TYPE="feat"
                        ;;
                      "bugfix"|"hotfix")
                        TYPE="fix"
                        ;;
                      *)
                        TYPE="$PREFIX"
                        ;;
                    esac
                    
                    # Check if PR title already has the correct format
                    if [[ ! "$PR_TITLE" =~ ^(feat|fix|release|support):\ #[0-9]+.*$ ]]; then
                      # Remove any existing [type]: prefix if present
                      CLEAN_TITLE=$(echo "$PR_TITLE" | sed -E 's/^\[(feat|fix|release|support)\]: ?//')
                      # Remove any existing type: prefix if present
                      CLEAN_TITLE=$(echo "$CLEAN_TITLE" | sed -E 's/^(feat|fix|release|support): ?//')
                      # Remove any existing #NUMBER if present
                      CLEAN_TITLE=$(echo "$CLEAN_TITLE" | sed -E 's/^#[0-9]+ ?//')
                      # Format new title
                      NEW_TITLE="$TYPE: #$ISSUE_NUMBER $CLEAN_TITLE"
                      
                      # Update PR title using GitHub API
                      curl -X PATCH \
                        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                        -H "Accept: application/vnd.github.v3+json" \
                        "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}" \
                        -d "{\"title\":\"$NEW_TITLE\"}"
                      
                      echo "Updated PR title to: $NEW_TITLE"
                    else
                      echo "PR title already follows the correct format"
                    fi
                  else
                    echo "Branch name does not match expected format"
                    exit 1
                  fi
